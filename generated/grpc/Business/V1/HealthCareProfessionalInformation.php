<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: business/v1/api.proto

namespace Business\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * <pre>
 * Stores data specific to a business in the "Medical" Taxonomy
 * </pre>
 *
 * Protobuf type <code>business.v1.HealthCareProfessionalInformation</code>
 */
class HealthCareProfessionalInformation extends \Google\Protobuf\Internal\Message
{
    /**
     * <pre>
     * The birth date of the practitioner. Some patients have an age 
     * preference when selecting a practitioner
     * </pre>
     *
     * <code>.google.protobuf.Timestamp date_of_birth = 1;</code>
     */
    private $date_of_birth = null;
    /**
     * <pre>
     * Direct contact email for the practitioner
     * </pre>
     *
     * <code>string email = 2;</code>
     */
    private $email = '';
    /**
     * <pre>
     * A list of free-form locations where the practitioner performed their
     * fellowships if applicable
     * </pre>
     *
     * <code>repeated string fellowship = 3;</code>
     */
    private $fellowship;
    /**
     * <pre>
     * The first name of the practitioner
     * </pre>
     *
     * <code>string first_name = 4;</code>
     */
    private $first_name = '';
    /**
     * <pre>
     * The gender of the practitioner. Some patients have a gender
     * preference when selecting a practitioner
     * </pre>
     *
     * <code>.business.v1.HealthCareProfessionalInformation.Gender gender = 5;</code>
     */
    private $gender = 0;
    /**
     * <pre>
     * The initials of the practitioner
     * </pre>
     *
     * <code>string initials = 6;</code>
     */
    private $initials = '';
    /**
     * <pre>
     * A free-form text list of insurance providers accepted by
     * the practitioner
     * </pre>
     *
     * <code>repeated string insurances_accepted = 7;</code>
     */
    private $insurances_accepted;
    /**
     * <pre>
     * Indicates whether the practitioner is accepting new patients.  Can be 
     * null, indicating that they did not specify.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue is_taking_patients = 8;</code>
     */
    private $is_taking_patients = null;
    /**
     * <pre>
     *The last name of the practitioner
     * </pre>
     *
     * <code>string last_name = 9;</code>
     */
    private $last_name = '';
    /**
     * <pre>
     * The practitioner's medical licence number, assigned by their 
     * particular certification authority.
     * </pre>
     *
     * <code>string medical_license_number = 10;</code>
     */
    private $medical_license_number = '';
    /**
     * <pre>
     * The 10-digit NPI number is assigned to all health practitioners by the
     * Centers for Medicare and Medicaid Services (CMS).
     * </pre>
     *
     * <code>string national_provider_identifier = 11;</code>
     */
    private $national_provider_identifier = '';
    /**
     * <pre>
     * Which operating office this location refers to
     * </pre>
     *
     * <code>string office = 12;</code>
     */
    private $office = '';
    /**
     * <pre>
     * A list of free-form text credentials held by the practitioner
     * </pre>
     *
     * <code>repeated string professional_credential = 13;</code>
     */
    private $professional_credential;
    /**
     * <pre>
     * A list of free-form locations where the practitioner performed their
     * residencies if applicable.
     * </pre>
     *
     * <code>repeated string residency = 14;</code>
     */
    private $residency;
    /**
     * <pre>
     * A list of free-form text schools the practitioner obtained educational
     * certifications through
     * </pre>
     *
     * <code>repeated string school = 15;</code>
     */
    private $school;
    /**
     * <pre>
     * A list of free-form specialties of the practitioner
     * </pre>
     *
     * <code>repeated string specialty = 16;</code>
     */
    private $specialty;
    /**
     * <pre>
     * The title used by the practitioner to describe themselves
     * </pre>
     *
     * <code>string standardized_title = 17;</code>
     */
    private $standardized_title = '';
    /**
     * <pre>
     * The license number issued by the practitioner's state
     * </pre>
     *
     * <code>string state_license = 18;</code>
     */
    private $state_license = '';

    public function __construct() {
        \GPBMetadata\Business\V1\Api::initOnce();
        parent::__construct();
    }

    /**
     * <pre>
     * The birth date of the practitioner. Some patients have an age 
     * preference when selecting a practitioner
     * </pre>
     *
     * <code>.google.protobuf.Timestamp date_of_birth = 1;</code>
     */
    public function getDateOfBirth()
    {
        return $this->date_of_birth;
    }

    /**
     * <pre>
     * The birth date of the practitioner. Some patients have an age 
     * preference when selecting a practitioner
     * </pre>
     *
     * <code>.google.protobuf.Timestamp date_of_birth = 1;</code>
     */
    public function setDateOfBirth(&$var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Timestamp::class);
        $this->date_of_birth = $var;
    }

    /**
     * <pre>
     * Direct contact email for the practitioner
     * </pre>
     *
     * <code>string email = 2;</code>
     */
    public function getEmail()
    {
        return $this->email;
    }

    /**
     * <pre>
     * Direct contact email for the practitioner
     * </pre>
     *
     * <code>string email = 2;</code>
     */
    public function setEmail($var)
    {
        GPBUtil::checkString($var, True);
        $this->email = $var;
    }

    /**
     * <pre>
     * A list of free-form locations where the practitioner performed their
     * fellowships if applicable
     * </pre>
     *
     * <code>repeated string fellowship = 3;</code>
     */
    public function getFellowship()
    {
        return $this->fellowship;
    }

    /**
     * <pre>
     * A list of free-form locations where the practitioner performed their
     * fellowships if applicable
     * </pre>
     *
     * <code>repeated string fellowship = 3;</code>
     */
    public function setFellowship(&$var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::STRING);
        $this->fellowship = $arr;
    }

    /**
     * <pre>
     * The first name of the practitioner
     * </pre>
     *
     * <code>string first_name = 4;</code>
     */
    public function getFirstName()
    {
        return $this->first_name;
    }

    /**
     * <pre>
     * The first name of the practitioner
     * </pre>
     *
     * <code>string first_name = 4;</code>
     */
    public function setFirstName($var)
    {
        GPBUtil::checkString($var, True);
        $this->first_name = $var;
    }

    /**
     * <pre>
     * The gender of the practitioner. Some patients have a gender
     * preference when selecting a practitioner
     * </pre>
     *
     * <code>.business.v1.HealthCareProfessionalInformation.Gender gender = 5;</code>
     */
    public function getGender()
    {
        return $this->gender;
    }

    /**
     * <pre>
     * The gender of the practitioner. Some patients have a gender
     * preference when selecting a practitioner
     * </pre>
     *
     * <code>.business.v1.HealthCareProfessionalInformation.Gender gender = 5;</code>
     */
    public function setGender($var)
    {
        GPBUtil::checkEnum($var, \Business\V1\HealthCareProfessionalInformation_Gender::class);
        $this->gender = $var;
    }

    /**
     * <pre>
     * The initials of the practitioner
     * </pre>
     *
     * <code>string initials = 6;</code>
     */
    public function getInitials()
    {
        return $this->initials;
    }

    /**
     * <pre>
     * The initials of the practitioner
     * </pre>
     *
     * <code>string initials = 6;</code>
     */
    public function setInitials($var)
    {
        GPBUtil::checkString($var, True);
        $this->initials = $var;
    }

    /**
     * <pre>
     * A free-form text list of insurance providers accepted by
     * the practitioner
     * </pre>
     *
     * <code>repeated string insurances_accepted = 7;</code>
     */
    public function getInsurancesAccepted()
    {
        return $this->insurances_accepted;
    }

    /**
     * <pre>
     * A free-form text list of insurance providers accepted by
     * the practitioner
     * </pre>
     *
     * <code>repeated string insurances_accepted = 7;</code>
     */
    public function setInsurancesAccepted(&$var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::STRING);
        $this->insurances_accepted = $arr;
    }

    /**
     * <pre>
     * Indicates whether the practitioner is accepting new patients.  Can be 
     * null, indicating that they did not specify.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue is_taking_patients = 8;</code>
     */
    public function getIsTakingPatients()
    {
        return $this->is_taking_patients;
    }

    /**
     * <pre>
     * Indicates whether the practitioner is accepting new patients.  Can be 
     * null, indicating that they did not specify.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue is_taking_patients = 8;</code>
     */
    public function setIsTakingPatients(&$var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\BoolValue::class);
        $this->is_taking_patients = $var;
    }

    /**
     * <pre>
     *The last name of the practitioner
     * </pre>
     *
     * <code>string last_name = 9;</code>
     */
    public function getLastName()
    {
        return $this->last_name;
    }

    /**
     * <pre>
     *The last name of the practitioner
     * </pre>
     *
     * <code>string last_name = 9;</code>
     */
    public function setLastName($var)
    {
        GPBUtil::checkString($var, True);
        $this->last_name = $var;
    }

    /**
     * <pre>
     * The practitioner's medical licence number, assigned by their 
     * particular certification authority.
     * </pre>
     *
     * <code>string medical_license_number = 10;</code>
     */
    public function getMedicalLicenseNumber()
    {
        return $this->medical_license_number;
    }

    /**
     * <pre>
     * The practitioner's medical licence number, assigned by their 
     * particular certification authority.
     * </pre>
     *
     * <code>string medical_license_number = 10;</code>
     */
    public function setMedicalLicenseNumber($var)
    {
        GPBUtil::checkString($var, True);
        $this->medical_license_number = $var;
    }

    /**
     * <pre>
     * The 10-digit NPI number is assigned to all health practitioners by the
     * Centers for Medicare and Medicaid Services (CMS).
     * </pre>
     *
     * <code>string national_provider_identifier = 11;</code>
     */
    public function getNationalProviderIdentifier()
    {
        return $this->national_provider_identifier;
    }

    /**
     * <pre>
     * The 10-digit NPI number is assigned to all health practitioners by the
     * Centers for Medicare and Medicaid Services (CMS).
     * </pre>
     *
     * <code>string national_provider_identifier = 11;</code>
     */
    public function setNationalProviderIdentifier($var)
    {
        GPBUtil::checkString($var, True);
        $this->national_provider_identifier = $var;
    }

    /**
     * <pre>
     * Which operating office this location refers to
     * </pre>
     *
     * <code>string office = 12;</code>
     */
    public function getOffice()
    {
        return $this->office;
    }

    /**
     * <pre>
     * Which operating office this location refers to
     * </pre>
     *
     * <code>string office = 12;</code>
     */
    public function setOffice($var)
    {
        GPBUtil::checkString($var, True);
        $this->office = $var;
    }

    /**
     * <pre>
     * A list of free-form text credentials held by the practitioner
     * </pre>
     *
     * <code>repeated string professional_credential = 13;</code>
     */
    public function getProfessionalCredential()
    {
        return $this->professional_credential;
    }

    /**
     * <pre>
     * A list of free-form text credentials held by the practitioner
     * </pre>
     *
     * <code>repeated string professional_credential = 13;</code>
     */
    public function setProfessionalCredential(&$var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::STRING);
        $this->professional_credential = $arr;
    }

    /**
     * <pre>
     * A list of free-form locations where the practitioner performed their
     * residencies if applicable.
     * </pre>
     *
     * <code>repeated string residency = 14;</code>
     */
    public function getResidency()
    {
        return $this->residency;
    }

    /**
     * <pre>
     * A list of free-form locations where the practitioner performed their
     * residencies if applicable.
     * </pre>
     *
     * <code>repeated string residency = 14;</code>
     */
    public function setResidency(&$var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::STRING);
        $this->residency = $arr;
    }

    /**
     * <pre>
     * A list of free-form text schools the practitioner obtained educational
     * certifications through
     * </pre>
     *
     * <code>repeated string school = 15;</code>
     */
    public function getSchool()
    {
        return $this->school;
    }

    /**
     * <pre>
     * A list of free-form text schools the practitioner obtained educational
     * certifications through
     * </pre>
     *
     * <code>repeated string school = 15;</code>
     */
    public function setSchool(&$var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::STRING);
        $this->school = $arr;
    }

    /**
     * <pre>
     * A list of free-form specialties of the practitioner
     * </pre>
     *
     * <code>repeated string specialty = 16;</code>
     */
    public function getSpecialty()
    {
        return $this->specialty;
    }

    /**
     * <pre>
     * A list of free-form specialties of the practitioner
     * </pre>
     *
     * <code>repeated string specialty = 16;</code>
     */
    public function setSpecialty(&$var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::STRING);
        $this->specialty = $arr;
    }

    /**
     * <pre>
     * The title used by the practitioner to describe themselves
     * </pre>
     *
     * <code>string standardized_title = 17;</code>
     */
    public function getStandardizedTitle()
    {
        return $this->standardized_title;
    }

    /**
     * <pre>
     * The title used by the practitioner to describe themselves
     * </pre>
     *
     * <code>string standardized_title = 17;</code>
     */
    public function setStandardizedTitle($var)
    {
        GPBUtil::checkString($var, True);
        $this->standardized_title = $var;
    }

    /**
     * <pre>
     * The license number issued by the practitioner's state
     * </pre>
     *
     * <code>string state_license = 18;</code>
     */
    public function getStateLicense()
    {
        return $this->state_license;
    }

    /**
     * <pre>
     * The license number issued by the practitioner's state
     * </pre>
     *
     * <code>string state_license = 18;</code>
     */
    public function setStateLicense($var)
    {
        GPBUtil::checkString($var, True);
        $this->state_license = $var;
    }

}

